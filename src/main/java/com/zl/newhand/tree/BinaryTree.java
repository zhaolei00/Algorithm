package com.zl.newhand.tree;

/**
 * @Author : zhaolei
 * @Date : Create in 2023/4/9 21:30
 * @Description :
 * 二叉树:
 * 先序遍历: 每一棵子树, 打印顺序为 头 左 右
 * 中序遍历: 每一棵子树, 打印顺序为 左 头 右
 * 后序遍历: 每一棵子树, 打印顺序为 左 右 头
 */
public class BinaryTree {

    // ===============【题目】能否组成路径和=====================
    // 给你二叉树的根节点root和一个表示目标和的整数targetSum。
    // 判断该树中是否存在根节点到叶子节点的路径，这条路径上所有节点值相加等于目标和targetSum。如果存在，返回true；否则，返回false。
    // 叶子节点是指没有子节点的节点。
    // 思路:
    //      方法一: 递归 设置全局变量isSum

    // ===============【题目】收集达标路径和=====================
    // 给你二叉树的根节点 root 和一个整数目标和 targetSum ，找出所有 从根节点到叶子节点 路径总和等于给定目标和的路径。
    // 叶子节点 是指没有子节点的节点。
    // 思路:
    //      方法一: 递归

}
